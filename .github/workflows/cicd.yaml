name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/my-app
  KUBE_NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Minikube and kubectl
        run: |
          sudo apt-get update -q
          sudo apt-get install -qy conntrack
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube version
          sudo apt-get install -y kubectl
          
      - name: Start Minikube cluster
        run: |
          minikube start --driver=docker --force --cpus=2 --memory=4000mb
          minikube status
          kubectl cluster-info
          
      - name: Configure Minikube
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          
      - name: Deploy to Minikube
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deployment/my-flask-app --timeout=120s
          
      - name: Checks
        run: |
          kubectl get pods -n ${{ env.KUBE_NAMESPACE }}
          kubectl describe pod <имя-пода> -n ${{ env.KUBE_NAMESPACE }}
          kubectl logs <имя-пода> -n ${{ env.KUBE_NAMESPACE }}
      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/my-flask-app my-flask-app=${{ env.DOCKER_IMAGE }}:${{ github.sha }} -n ${{ env.KUBE_NAMESPACE }}
          kubectl rollout status deployment/my-flask-app -n ${{ env.KUBE_NAMESPACE }}
